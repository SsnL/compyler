#!/bin/sh

src="`cd \`dirname $0\`; pwd`"

MAKE=${MAKE:-make}

Usage () {
    echo "Usage: DIR/configure [ OPTION ... ]
    where OPTION may be any of these:
       --prefix=PREFIX   Base installation directory (default $HOME).
       --exec-prefix=EPREFIX
                         Base installation directory for architecture-dependent
                         files (default PREFIX).
       --bindir=DIR      Executables' directory (default EPREFIX/bin).
       --libdir=DIR      Architecture-dependent libraries (default EPREFIX/lib).
       --include=DIR     Include files defining parser data structures
                         (default PREFIX/include)
       --datadir=DIR     Templates (default PREFIX/share/horn/lib).
       --gcprefix=DIR    Directory prefix for installing Boehm-Demers-Weiser
                         collector.
       --gc-exec-prefix=DIR  Architecture-dependent directory prefix for 
                         installing Boehm-Demers-Weiser collector.
       --with-python=PATH
       --with-bison=PATH
       --with-flex=PATH
                         Locations of Python, Bison, and Flex (default: taken
			 from PATH at time of configuration)."
}

fullpath () {
    if expr "$1" : '^/' >/dev/null; then
        echo "$1";
    else
        echo "`pwd`/$1";
    fi
    return 0
}

findprog () {
    IFS0="$IFS"
    IFS=":"
    for p in $PATH; do
        if [ -x $p/$1 ]; then
	   IFS="$IFS0"
	   echo "$p/$1"; return 0
	fi
    done
    
    echo "Error: $1 not found."; exit 1
}

doconfig () {
    rm -f $2
    sed -e "s,@BINDIR@,$bindir,g" \
        -e "s,@DATADIR@,$datadir,g" \
        -e "s,@INCLUDEDIR@,$includedir,g" \
        -e "s,@PYTHON@,$python,g" \
	-e "s,@BISON@,$bison,g" \
	-e "s,@FLEX@,$flex,g" \
	-e "s,@SRCDIR@,$src,g" \
	-e "s,%%,@,g" \
       "$1" > "$2" || { echo "Could not generate $2"; exit 1; }
    if [ -x "$1" ]; then
       chmod a+rx "$2"
    fi
    echo "Configured $2"
}

prefix=
bindir=
datadir=
python=
includedir=
bison=
flex=
gcprefix=
gceprefix=

cmnd="$0 $@"
cmnd="$0"
for arg in "$@"; do
    cmnd="$cmnd '$arg'"
done

while [ $# -gt 0 ]; do
    arg="`echo $1 | sed 's/.*=//'`"
    case "$1" in
    --prefix=*)      prefix="`fullpath $arg`";;
    --exec-prefix=*) eprefix="`fullpath $arg`";;
    --bindir=*)      bindir="`fullpath $arg`";;
    --datadir=*)     datadir="`fullpath $arg`";;
    --gcprefix=*)    gcprefix="`fullpath $arg`";;
    --gc-exec-prefix=*) gceprefix="`fullpath $arg`";;
    --libdir=*)      libdir="`fullpath $arg`";;
    --includedir=*)  includedir="`fullpath $arg`";;
    --with-python=*) python="$arg";;
    --with-bison=*)  bison="$arg";;
    --with-flex=*)   flex="$arg";;
    *)               Usage; exit 1;;
    esac
    shift
done

echo "
# Generated by Horn configure script.
# Run this script through a shell to run configure with its last arguments." \
    > config.status
echo $cmnd >> config.status

if [ -z "$prefix" ]; then
    prefix="$HOME"
fi
if [ -z "$eprefix" ]; then
    eprefix="$prefix"
fi
if [ -z "$bindir" ]; then
    bindir="$eprefix/bin"
fi
if [ -z "$datadir" ]; then
    datadir="$prefix/share/horn"
fi
if [ -z "$includedir" ]; then
    includedir="$prefix/include"
fi
if [ -z "$python" ]; then
    python=`findprog python`
fi
if [ -z "$bison" ]; then
    bison=`findprog bison`
fi
if [ -z "$flex" ]; then
    flex=`findprog flex`
fi

if [ -z "$gcprefix" ]; then
    gcprefix="$prefix"
fi

if [ -z "$gceprefix" ]; then
    gceprefix="$gcprefix"
fi

[ -d bdw-gc ] || mkdir bdw-gc
$MAKE -C bdw-gc -f $src/bdw-gc/Makefile.horn \
     PREFIX="$gcprefix" EPREFIX="$gceprefix" SRCDIR="$src/bdw-gc" configure

doconfig $src/Makefile.in ./Makefile
doconfig $src/params.h.in ./params.h
chmod a-w Makefile
if [ -f $src/tests/Makefile.in ]; then
    if [ ! -x tests ]; then mkdir tests; fi
    doconfig $src/tests/Makefile.in tests/Makefile
fi

